

/****************************************************/
/*           VEHICULOS QUE VIENEN A TALLER          */
/****************************************************/

DATA BASE_5;
SET BASE_4;
USADO=0;
IF PROVEEDOR="USADOS" THEN USADO=1;
IF KML_PROMEDIO=. THEN KML_PROMEDIO = PROMEDIO_KML_MES_FAMILIA;
IF KML_ANT NE . THEN KML_ESTIMADO = SUM(KML_ANT,((INTCK('DAY',FECHA_APER_ANT,TODAY()-1)/30)*KML_PROMEDIO));
IF KML_ANT = . THEN KML_ESTIMADO = ANTIGUEDAD_VEHICULO*KML_PROMEDIO;

/*KML PROXIMA MANTENCION*/
KML_PROX_PASADO=SUM(KML_ESTIMADO,-KML_ANT);
IF KML_ULT NE . THEN KML_PROX_PASADO=SUM(KML_ULT,-KML_ANT);


VISITA=0;
IF KML_ULT NE . THEN VISITA=1;

IF FAMILIA = '' THEN DELETE;
IF KML_ANT=. THEN DELETE;
IF KML_ANT < KML_PROMEDIO THEN DELETE;


CONTRATO=0;
IF TIPO_CONTRATO NE '' THEN CONTRATO=1;
DROP ANTIGUEDAD_ENTRE_VISITAS KML_ENTRE_MANTENCION ANTIGUEDAD_HASTA_VISITA KML_ULT FECHA_APER_ULT TIPO_CONTRATO
SUCURSAL CIUDAD COMUNA PROVEEDOR PROMEDIO_KML_MES_FAMILIA DESC_CENTRO_ULT;
RUN;

/*NUMERO DE VECES QUE A VENIDO*/

PROC SQL;
   CREATE TABLE WORK.QUERY_FOR_INI_41(label="QUERY_FOR_INI_4") AS 
   SELECT t1.NRO_CHASSIS, 
          /* COUNT_of_NRO_CHASSIS */
            (COUNT(t1.NRO_CHASSIS)) AS COUNT_of_NRO_CHASSIS
      FROM WORK.QUERY_FOR_INI_4_0000 t1
      GROUP BY t1.NRO_CHASSIS;
QUIT;

PROC SQL;
CREATE TABLE BASE_6 AS SELECT
T1.*,
T2.COUNT_of_NRO_CHASSIS AS NRO_VISITAS_MANT
FROM BASE_5 AS T1 LEFT JOIN QUERY_FOR_INI_41 AS T2 ON (T1.NRO_CHASSIS=T2.NRO_CHASSIS);
QUIT;


/*VENTA DEL VEHICULO*/

DATA BASE_7;
SET BASE_6;
IF MONEDA_FICHA='DOLAR KAUFMANN' THEN NETO_VEHICULO_FICHA = TIPO_CAMBIO_FICHA*NETO_VEHICULO_FICHA;
DROP MONEDA_FICHA TIPO_CAMBIO_FICHA;
RUN;

/*IMPUTACION VACIOS*/

PROC SQL;
   CREATE TABLE WORK.QUERY_FOR_BASE_7 AS 
   SELECT t1.FAMILIA, 
          /* MEAN_of_NETO_VEHICULO_FICHA */
            (MEAN(t1.NETO_VEHICULO_FICHA)) FORMAT=DOLLARX20.2 AS MEAN_of_NETO_VEHICULO_FICHA
      FROM WORK.BASE_7 t1
      GROUP BY t1.FAMILIA;
QUIT;


PROC SQL;
   CREATE TABLE WORK.QUERY_FOR_PROYECTO_CLIENTES_CHIL AS 
   SELECT t1.RUT_2, 
          t1.SUMA_TRANS, 
          t1.TR_SAP, 
          t1.TR_LEGADOS, 
          t1.TR_MDLA, 
          t1.COMPRA_UNIDADES, 
          t1.COMPRA_SERVICIO, 
          t1.COMPRA_MESON, 
          t1.COMPRA_BOUTIQUE, 
          t1.OFERTAS_LEGADOS, 
          t1.COTIZA_SERVICIO, 
          t1.COTIZA_MESON, 
          t1.CANT_RECLAMOS_KAUF
      FROM CLIBDC.PROYECTO_CLIENTES_CHILE t1;
QUIT;


PROC SQL;
   CREATE TABLE WORK.BASE_8 AS 
   SELECT t1.RUT, 
          t3.SUMA_TRANS, 
          t3.TR_SAP, 
          t3.TR_LEGADOS, 
          t3.TR_MDLA, 
          t3.COMPRA_UNIDADES, 
          t3.COMPRA_SERVICIO, 
          t3.COMPRA_MESON, 
          t3.COMPRA_BOUTIQUE, 
          t3.OFERTAS_LEGADOS, 
          t3.COTIZA_SERVICIO, 
          t3.COTIZA_MESON, 
          t1.RAZON_SOCIAL, 
          t1.NRO_CHASSIS, 
          t1.NRO_VIN, 
          t1.ID_VEH, 
          t1.FEC_DOCTO_VTA, 
          t1.TERMINO_VTA, 
          t1.PATENTE, 
          t1.PROVINCIA_CLIENTE, 
          (CASE WHEN t1.NETO_VEHICULO_FICHA=. THEN T2.MEAN_of_NETO_VEHICULO_FICHA ELSE t1.NETO_VEHICULO_FICHA END) AS NETO_VEHICULO_FICHA, 
          t1.FORMA_DE_PAGO, 
          t1.FAMILIA, 
          t1.KML_ANT, 
		  t1.DESC_CENTRO_ANT,
          t1.ANTIGUEDAD_VEHICULO, 
          t1.KML_PROMEDIO, 
          t1.USADO, 
          t1.KML_ESTIMADO, 
          t1.KML_PROX_PASADO, 
		  t1.CONTRATO, 
          t1.NRO_VISITAS_MANT,
          t1.VISITA
      FROM WORK.BASE_7 t1 LEFT JOIN QUERY_FOR_BASE_7 AS T2 ON (T1.FAMILIA=T2.FAMILIA)
LEFT JOIN CLIBDC.PROYECTO_CLIENTES_CHILE AS T3 ON (T1.RUT=T3.RUT_2);
QUIT;

DATA BASE_9;
SET BASE_8;
/*PAUTAS ENTREGADAS POR CM*/
*INTERVALO_MANT='20MIL';
*IF  DESC_CENTRO_ANT IN ("Sucursal Calama","Sucursal Copiapó","Sucursal Punta Arenas") THEN INTERVALO_MANT='10MIL';
/*JURIDICA O NATURAL*/
TIPO_PERS=0;
IF  (SUBSTR(RUT,1,INDEX(RUT,"-")-1)*1) > 59000000 THEN TIPO_PERS= 1;
RUN;


/*************************************/
/*       Inicio Data Cleaning        */
/*************************************/
 

/*Eliminamos el 1% más pequeño y el 1% mas grande de KML_POR_MES. 
En nuestra muestra los cortos son mayores o iguales a 90 y menores a 8100.*/

PROC MEANS DATA=BASE_9 NOPRINT;
VAR  KML_PROMEDIO;
OUTPUT OUT=KML_MES_EXTREMOS (DROP= _TYPE_ _FREQ_)
P1=MINIMO
P99=MAXIMO;
RUN;

PROC SQL NOPRINT; SELECT MINIMO,MAXIMO INTO:MINIMO,:MAXIMO FROM KML_MES_EXTREMOS;QUIT;

DATA BASE_9_0;
SET BASE_9;
IF SCOREAR NE 'X' THEN DO;
IF &MINIMO.<= KML_PROMEDIO <= &MAXIMO.;
END;
*keep NRO_CHASSIS RUT FAMILIA MODELO MODELO_DESCRIPCION SEXO_CLIENTE PROVINCIA_CLIENTE MONTO_VENTA MONEDA TIPO_CAMBIO FORMA_DE_PAGO;
RUN;

/*******************/
/*BALANCEO DE DATOS*/
/*******************/

PROC SQL;
   CREATE TABLE WORK.QUERY_FOR_BASE_9_0000(label="QUERY_FOR_BASE_9") AS 
   SELECT t1.VISITA, 
          /* COUNT_of_VISITA */
            (COUNT(t1.VISITA)) AS COUNT_of_VISITA
      FROM WORK.BASE_9_0 t1
      GROUP BY t1.VISITA;
QUIT;

PROC SQL NOPRINT; SELECT COUNT_of_VISITA INTO: NO_VISITA FROM QUERY_FOR_BASE_9_0000 WHERE VISITA =0;QUIT; 
PROC SQL NOPRINT; SELECT COUNT_of_VISITA INTO: VISITA FROM QUERY_FOR_BASE_9_0000 WHERE VISITA =1;QUIT; 

DATA BALANCEO;
SET BASE_9_0;
NO_VISITA=&NO_VISITA.;
SI_VISITA = &VISITA.;
DIF=SUM(SI_VISITA,-NO_VISITA);
/*SI LA DIF ES >0 ENTONCES NECESITAMOS MAS "NO VISITA"*/
IF DIF>0 THEN DO;
IF VISITA=0;
END;
IF DIF<=0 THEN DO;
IF VISITA=1;
DIF=DIF*(-1);
END;
RAND=rand("Uniform"); 
RUN;

PROC SORT DATA=BALANCEO;BY RAND;RUN;

DATA BALANCEO_1;
SET BALANCEO;
ID=_N_;
IF DIF >=ID;
RUN;

DATA BASE_10;
SET BASE_9 BALANCEO_1;
DROP NO_VISITA SI_VISITA DIF ID RAND RUT RAZON_SOCIAL NRO_CHASSIS NRO_VIN ID_VEH FEC_DOCTO_VTA TERMINO_VTA PATENTE DESC_CENTRO_ANT;
RUN;

DATA ML_VANS_BUS_MRA;
SET BASE_10;
RUN;

/*SEPARAR BASE DE ENTRENAMIENTO Y VALIDACION*/

DATA ML_VANS_BUS_MRA;
SET ML_VANS_BUS_MRA;
RAND=rand("Uniform");
RUN;

PROC SORT DATA=ML_VANS_BUS_MRA;BY RAND;RUN;
PROC SQL NOPRINT;SELECT COUNT(*) INTO:OBS FROM ML_VANS_BUS_MRA;QUIT;

DATA ML_VANS_BUS_MRA_1;
SET ML_VANS_BUS_MRA;
IF (_N_/&OBS.) <0.8 THEN MUESTRA='TRAIN';
IF (_N_/&OBS.) >=0.8 THEN MUESTRA='TEST';
AUXILIAR=VISITA;
IF MUESTRA = 'TEST' THEN VISITA=.;
RUN;

PROC LOGISTIC DATA=ML_VANS_BUS_MRA_1 outest=lowbwt33;
	CLASS PROVINCIA_CLIENTE (PARAM=EFFECT) FORMA_DE_PAGO (PARAM=EFFECT) FAMILIA (PARAM=EFFECT);
	MODEL VISITA (Event = '1')=SUMA_TRANS TR_SAP TR_LEGADOS TR_MDLA COMPRA_UNIDADES COMPRA_SERVICIO COMPRA_MESON COMPRA_BOUTIQUE OFERTAS_LEGADOS COTIZA_SERVICIO COTIZA_MESON NETO_VEHICULO_FICHA KML_ANT ANTIGUEDAD_VEHICULO KML_PROMEDIO USADO KML_ESTIMADO CONTRATO NRO_VISITAS_MANT TIPO_PERS PROVINCIA_CLIENTE FORMA_DE_PAGO FAMILIA		/
	SELECTION=STEPWISE
		SLE=0.05
		SLS=0.05
		INCLUDE=0
		LACKFIT
		RSQUARE 
		LINK=LOGIT ;
	OUTPUT OUT=PREDLogRegPredictionsBASE_10
		PREDPROBS=INDIVIDUAL
		RESCHI=reschi_VISITA 
		RESDEV=resdev_VISITA 
		DIFCHISQ=difchisq_VISITA 
		DIFDEV=difdev_VISITA 
		UPPER=upper_VISITA 
		LOWER=lower_VISITA ;
RUN;


/*EVALUACION DE PRECISION*/

DATA PRED;
SET PREDLogRegPredictionsBASE_10;
PRECISION = 0;
IF _INTO_=AUXILIAR THEN PRECISION=1;
RUN;

PROC SQL;
   CREATE TABLE WORK.QUERY_FOR_PRED AS 
   SELECT t1.MUESTRA, 
            (COUNT(t1.MUESTRA)) AS COUNT_of_MUESTRA
      FROM WORK.PRED t1
      GROUP BY t1.MUESTRA;
QUIT;

PROC SQL;
   CREATE TABLE WORK.QUERY_FOR_PRED_0000(label="QUERY_FOR_PRED") AS 
   SELECT t1.MUESTRA, 
          /* SUM_of_PRECISION */
            (SUM(t1.PRECISION)) AS SUM_of_PRECISION
      FROM WORK.PRED t1
      GROUP BY t1.MUESTRA;
QUIT;

PROC SQL;
CREATE TABLE PRECISION AS SELECT
T1.MUESTRA,
T1.COUNT_of_MUESTRA AS OBSERVACIONES,
T2.SUM_of_PRECISION AS ACIERTOS,
T2.SUM_of_PRECISION/T1.COUNT_of_MUESTRA AS PRECISION FORMAT=PERCENT10.2

FROM QUERY_FOR_PRED AS T1 LEFT JOIN QUERY_FOR_PRED_0000 AS T2 ON (T1.MUESTRA=T2.MUESTRA);
QUIT;
/*
proc freq data=PRED;
  tables AUXILIAR*_INTO_;
run;

*/


/*AQUI SE DEBERIA MANDAR UN MENSAJE O GUARDAR LA TABLA EN UN LOG DE PRECISION*/


/*YA QUE SABEMOS QUE EL MODELO ES PRECISO, MANDEMOS A SCOREAR*/

DATA SCOREAR;
SET ML_VANS_BUS_MRA_1 SEGMENTO_2_Y_3_SCORE_5;
DROP SCOREAR RAND MUESTRA AUXILIAR  RAZON_SOCIAL  NRO_VIN ID_VEH FEC_DOCTO_VTA TERMINO_VTA PATENTE DESC_CENTRO_ANT;
RUN;

ods graphics on;
PROC LOGISTIC DATA=SCOREAR;
	CLASS PROVINCIA_CLIENTE (PARAM=EFFECT) FORMA_DE_PAGO (PARAM=EFFECT) FAMILIA (PARAM=EFFECT);
	MODEL VISITA (Event = '1')=SUMA_TRANS TR_SAP TR_LEGADOS TR_MDLA COMPRA_UNIDADES COMPRA_SERVICIO COMPRA_MESON COMPRA_BOUTIQUE OFERTAS_LEGADOS COTIZA_SERVICIO COTIZA_MESON NETO_VEHICULO_FICHA KML_ANT ANTIGUEDAD_VEHICULO KML_PROMEDIO USADO KML_ESTIMADO CONTRATO NRO_VISITAS_MANT TIPO_PERS PROVINCIA_CLIENTE FORMA_DE_PAGO FAMILIA		/
	SELECTION=STEPWISE
		SLE=0.05
		SLS=0.05
		INCLUDE=0
		LACKFIT
		RSQUARE 
		LINK=LOGIT ;
	OUTPUT OUT=PREDLogRegPredictionsBASE_10
		PREDPROBS=INDIVIDUAL;
RUN;
ods graphics off;


PROC SQL;
   CREATE TABLE WORK.QUERY_FOR_PREDLOGREGPREDICTIONSB AS 
   SELECT t1.RUT, 
          t1.NRO_CHASSIS, 
          t1._INTO_, 
          t1.IP_1
      FROM WORK.PREDLOGREGPREDICTIONSBASE_10 t1
      WHERE t1.NRO_CHASSIS NOT = '';
QUIT;
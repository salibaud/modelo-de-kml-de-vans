

PROC SQL;
CREATE TABLE CAB_PEDIDOS AS SELECT
T1.PEDIDO,
DATEPART(T1.FECHA_APER) AS FECHA_APERTURA FORMAT=DDMMYY10.,
T1.ID_VEH,
T1.KML,
T1.CENTRO,
T2.NRO_INTERNO,
T2.DES_MOD1,
DATEPART(T2.FECHA_MATRICU) AS FECHA_MATRICU FORMAT=DDMMYY10.,
SUBSTR(T2.DES_MOD1,10,3) AS COD_MODELO
FROM KAUFMANN.CAB_PEDIDOS AS T1 LEFT JOIN KAUFMANN.VEHICULOS_MOD_CLASIFICACION AS T2 ON (T1.ID_VEH=T2.ID_VEH)
WHERE T1.ORGANIZ_VENTA IN ('1130','1131') AND T2.MODELO='SPRINTER' and DATEPART(t1.FECHA_APER) < '28Mar2019'd;
QUIT;

DATA CAB_PEDIDOS_1;
SET CAB_PEDIDOS;
IF INDEX(DES_MOD1,"308")>0 THEN COD_MODELO='308';
IF INDEX(DES_MOD1,"309")>0 THEN COD_MODELO='309';
IF INDEX(DES_MOD1,"310")>0 THEN COD_MODELO='310';
IF INDEX(DES_MOD1,"312")>0 THEN COD_MODELO='312';
IF INDEX(DES_MOD1,"313")>0 THEN COD_MODELO='313';
IF INDEX(DES_MOD1,"412")>0 THEN COD_MODELO='412';
IF INDEX(DES_MOD1,"413")>0 THEN COD_MODELO='413';
FURGON = 0;
IF INDEX(DES_MOD1,"FURGON")>0 THEN FURGON=1;
 KOMBI = 0;
IF INDEX(DES_MOD1,"KOMBI")>0 THEN  KOMBI=1;

RUN;

PROC SQL;
   CREATE TABLE WORK.QUERY_FOR_MAESTRO_VENTAS_VEHICUL AS 
   SELECT t1.LOTE, 
          /* MIN_of_FEC_DOCTO_VTA */
            (MIN(t1.FEC_DOCTO_VTA)) FORMAT=DATETIME20. AS MIN_of_FEC_DOCTO_VTA
      FROM UNIDADES.MAESTRO_VENTAS_VEHICULOS t1
      GROUP BY t1.LOTE;
QUIT;

PROC SQL;
CREATE TABLE CAB_PEDIDOS_2 AS SELECT
T1.*,
DATEPART(T2.MIN_of_FEC_DOCTO_VTA) AS FECHA_VTA FORMAT=DDMMYY10.
FROM CAB_PEDIDOS_1 AS T1 LEFT JOIN QUERY_FOR_MAESTRO_VENTAS_VEHICUL AS T2 ON (T1.NRO_INTERNO=T2.LOTE);
QUIT;

DATA CAB_PEDIDOS_3;
SET CAB_PEDIDOS_2;
IF FECHA_MATRICU = . THEN FECHA_MATRICU= FECHA_VTA;
DROP FECHA_VTA;
RUN;

PROC SORT DATA=CLIMABI.BD_CATEGORIZACION OUT=BD_CATEGORIZACION NODUPKEY;BY MODELO;RUN;

PROC SQL;
CREATE TABLE CAB_PEDIDOS_4 AS SELECT
T1.*,
T2.MODELO_AGRUPADO,
T2.CLASE,
T2.FAMILIA
FROM CAB_PEDIDOS_3 AS T1 LEFT JOIN BD_CATEGORIZACION AS T2 ON (T1.DES_MOD1=T2.MODELO);
QUIT;

DATA CAB_PEDIDOS_5;
SET CAB_PEDIDOS_4;
IF MODELO_AGRUPADO = '' THEN MODELO_AGRUPADO='OTROS';
IF CLASE = '' THEN CLASE='OTROS';
IF FAMILIA = '' THEN FAMILIA='OTROS';
ANTIGUEAD = INTCK('MONTH',FECHA_MATRICU,FECHA_APERTURA)/12;
IF ANTIGUEAD = . THEN DELETE;
KML_POR_MES = KML/ANTIGUEAD;
IF ANTIGUEAD<=0 THEN DELETE;
RUN;

PROC SORT DATA=CAB_PEDIDOS_5; BY COD_MODELO FURGON KOMBI MODELO_AGRUPADO CLASE FAMILIA;RUN;


PROC MEANS DATA=CAB_PEDIDOS_5 NOPRINT;
BY COD_MODELO FURGON KOMBI MODELO_AGRUPADO CLASE FAMILIA;
VAR KML_POR_MES;
OUTPUT OUT = CAB_PEDIDOS_51 
P5=PERCENTIL5 P95=PERCENTIL95;
RUN;

PROC SQL;
CREATE TABLE CAB_PEDIDOS_6 AS SELECT
T1.*,
T2.PERCENTIL5,
T2.PERCENTIL95
FROM CAB_PEDIDOS_5 AS T1 LEFT JOIN CAB_PEDIDOS_51 AS T2 ON 
(T1.COD_MODELO=T2.COD_MODELO AND T1.FURGON=T2.FURGON AND T1.KOMBI=T2.KOMBI AND T1.MODELO_AGRUPADO=T2.MODELO_AGRUPADO AND T1.CLASE=t2.CLASE
AND T1.FAMILIA=T2.FAMILIA);
QUIT;

DATA CAB_PEDIDOS_7;
SET CAB_PEDIDOS_6;
IF PERCENTIL5 < KML_POR_MES < PERCENTIL95;
RUN;

DATA CLIPVBM.KML_SPRINTER;
SET CAB_PEDIDOS_7;
RUN;

proc sql;
create table contador as select
T1.ID_VEH,
COUNT(T1.ID_VEH) AS NUMERO_REP
FROM CAB_PEDIDOS_7 AS T1
GROUP BY T1.ID_VEH;
QUIT;

PROC SQL;
CREATE TABLE CAB_PEDIDOS_8 AS SELECT
*
FROM CAB_PEDIDOS_7 WHERE ID_VEH IN (SELECT DISTINCT ID_VEH FROM contador WHERE NUMERO_REP >5);
QUIT;


/*
proc sgpanel data=CAB_PEDIDOS_8 noautolegend;
WHERE ID_VEH IN ('Jw{oJDa584}X00002W4bQm','JwqR4bOBGDRX00002W4bQW','K2e1ld{w5qJX00002W4bQW','KMnbhXQ4P4JX00002W4bSm');
  title 'KML VERSUS ANTIGUEDAD EN AÑOS';
  label tpoint='TIEMPO' weight='KILOMETRAJE';
  panelby ID_VEH / columns=2 rows=2;
  scatter x=ANTIGUEAD y=KML;
run;

*/


/****DATOS AL DIA DE HOY (PREDICCIÓN)****/

DATA PREDICCION;
SET CAB_PEDIDOS_8;
FECHA_APERTURA = TODAY()+15;
ANTIGUEAD = INTCK('MONTH',FECHA_MATRICU,FECHA_APERTURA)/12;
KML=.;
RUN;

PROC SORT DATA=PREDICCION NODUPKEY;BY id_VEH;RUN;

DATA CAB_PEDIDOS_9;
SET CAB_PEDIDOS_8 PREDICCION;
KEEP id_VEH CLASE FAMILIA COD_MODELO KML ANTIGUEAD KOMBI CENTRO ;
RUN;

PROC SORT DATA=CAB_PEDIDOS_9;BY id_VEH ANTIGUEAD;
RUN;

PROC SORT DATA=CAB_PEDIDOS_9 NODUPKEY; BY ID_VEH KML;RUN;

PROC SORT DATA=CAB_PEDIDOS_9 NODUPKEY; BY ID_VEH ANTIGUEAD;RUN;



PROC SQL;
CREATE TABLE PROMEDIO AS SELECT
CENTRO,
MEAN(ANTIGUEAD) AS PROMEDIO
FROM CAB_PEDIDOS_8 GROUP BY CENTRO;
QUIT;

PROC SQL;
CREATE TABLE CAB_PEDIDOS_9 AS SELECT
T1.*,
T1.ANTIGUEAD-T2.PROMEDIO AS ANT_CENTRO
FROM CAB_PEDIDOS_9 AS T1 LEFT JOIN PROMEDIO AS T2 ON (T1.CENTRO=T2.CENTRO);
QUIT;

/*

ods graphics on;
PROC GLIMMIX data=CAB_PEDIDOS_9 plots =(all) ;
  class id_VEH CLASE FAMILIA COD_MODELO ;
  model KML=ANTIGUEAD COD_MODELO  KOMBI CLASE FAMILIA / solution  ddfm=bw DIST=normal COVB;
  RANDOM ANTIGUEAD/ subject=id_VEH type=un;
  output out=hglimmix pred=p resid=r  std=errror residual var ;
RUN;
ODS GRAPHICS OFF;
*/


/*ALTERNATIVA*/

ods graphics on;
PROC GLIMMIX data=CAB_PEDIDOS_9 plots =(all) ;
  class id_VEH CLASE FAMILIA COD_MODELO CENTRO;
  model KML=ANTIGUEAD COD_MODELO  KOMBI CLASE FAMILIA ANT_CENTRO*CENTRO/ solution  ddfm=bw DIST=normal COVB;
  RANDOM ANTIGUEAD ANT_CENTRO/ subject=CENTRO(id_VEH) type=un;
  output out=hglimmix pred=p resid=r  std=errror residual var ;
RUN;
ODS GRAPHICS OFF;



data hreg_mse;
set hglimmix;
WHERE Resid NE . ; 
sum+(Resid)**2;
ID=_n_;
mse=SQRT(sum/_n_);
run;



data _NULL_;If 0 then set hreg_mse nobs=n; call symputx('nrows',n);stop;run;



DATA MSE2;
SET hreg_mse;
IF ID = &nrows;
TITULO = "GLMM";
KEEP TITULO MSE;
RUN;



DATA RESULTADOS;
SET hglimmix;
WHERE Resid = . ; 
RUN;

proc sql;
CREATE TABLE CLIPVBM.AGF_VANS_1_EST_KML AS SELECT
T1.*,
T2.PATENTE
FROM RESULTADOS AS T1 LEFT JOIN KAUFMANN.VEHICULOS_MOD_CLASIFICACION AS T2 ON (T1.ID_VEH=T2.ID_VEH);
QUIT;